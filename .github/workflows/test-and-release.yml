name: Test

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
  push:
    branches:
      - '*'
    tags:
      # normal versions
      - "v[0-9]+.[0-9]+.[0-9]+"
      # pre-releases
      - "v[0-9]+.[0-9]+.[0-9]+-**"
  pull_request:

concurrency:
  group: adapter-test-${{ github.event_name }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  # Performs quick checks before the expensive test runs
  check-and-lint:
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: ubuntu-latest

    steps:
      - uses: ioBroker/testing-action-check@v1
        with:
          node-version: 16.x
          lint: true

  # Runs adapter tests on all supported node versions and OSes
  adapter-tests:
    needs:
      - check-and-lint
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version:
          - 16.x
          - 18.x
          - 20.x
          - 21.x
        os:
          - ubuntu-latest

    steps:
      - uses: ioBroker/testing-action-adapter@v1
        with:
          node-version: ${{ matrix.node-version }}
          os: ${{ matrix.os }}

  # Deploys the final package to NPM
  deploy:
    needs:
      - adapter-tests

    # Trigger this step only when a commit on master is tagged with a version number
    if: |
      contains(github.event.head_commit.message, '[skip ci]') == false &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 22.x

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Extract the version and commit body from the tag
        id: extract_release
        # The body may be multiline, therefore we need to escape some characters
        run: |
          VERSION="${{ github.ref }}"
          VERSION=${VERSION##*/}
          VERSION=${VERSION##*v}
          echo "VERSION=${VERSION}" >> ${GITHUB_OUTPUT}
          BODY=$(git show -s --format=%b)
          BODY="${BODY//'%'/'%25'}"
          BODY="${BODY//$'\n'/'%0A'}"
          BODY="${BODY//$'\r'/'%0D'}"
          echo "BODY=${BODY}" >> ${GITHUB_OUTPUT}

      - name: Install Dependencies
        run: npm install --ignore-scripts

      # - name: Create a clean build
      #   run: npm run build

      # - name: Publish package to npm
      #   run: |
      #     npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
      #     npm whoami
      #     npm publish

      # - name: Create Github Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release v${{ steps.extract_release.outputs.VERSION }}
      #     draft: false
      #     body: ${{ steps.extract_release.outputs.BODY }}
